{"version":3,"sources":["services/dummyData.js","reducers/weatherReducer.js","reducers/index.js","actions/types.js","store.js","components/Header/Header.js","components/HomePage/HomePage.style.js","services/weatherService.js","actions/weatherActions.js","components/HomePage/ActionsBar.js","components/CurrWeatherIcon.js","components/ErrorModal.js","components/HomePage/HomePage.js","components/Favorites/Favorites.style.js","components/Favorites/FavoriteItem.js","components/Favorites/Favorites.js","components/Router/Router.js","App.js","serviceWorker.js","index.js","icons/background.jpg","icons/full.png","icons/sun.svg","icons/sun-cloud.svg","icons/empty.png"],"names":["dummyFavorites","id","name","currWeather","Temperature","Metric","Unit","UnitType","Value","Imperial","WeatherText","dummyCurrLocation","Version","Key","Type","Rank","LocalizedName","Country","ID","AdministrativeArea","dummyLocations","dummyCurrWeather","LocalObservationDateTime","EpochTime","WeatherIcon","HasPrecipitation","PrecipitationType","IsDayTime","MobileLink","Link","dummyCurr5DaysForecast","Headline","EffectiveDate","EffectiveEpochDate","Severity","Text","Category","EndDate","EndEpochDate","DailyForecasts","Date","EpochDate","Minimum","Maximum","Day","Icon","IconPhrase","Night","Sources","PrecipitationIntensity","initialState","locations","currLocation","curr5DaysForecast","favorites","dummyData","isTempAsC","combineReducers","weatherReducer","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","title","display","alignItems","flexGrow","link","textDecoration","color","textTransform","fontFamily","marginLeft","titleIcon","width","height","textStyle","withStyles","withTheme","classes","AppBar","position","style","background","cyan","Toolbar","className","Typography","variant","src","sun","alt","to","styles","theme","actionsBarContainer","maxWidth","margin","justifyContent","autocomplete","flex","marginRight","input","spacing","mainForecastContainer","padding","border","borderRadius","backgroundPosition","backgroundSize","top","middle","fontSize","textAlign","dayCard","current","contentContainer","flexDirection","favoritesSection","favoritesStar","cursor","API_KEY","getLocations","query","a","fetch","apiCall","json","res","getCurrLocation","getCurrentWeather","locationKey","get5DaysForecast","createFavorite","addToFavorites","newFavorite","push","removeFromFavorites","cityIdx","findIndex","city","splice","setFavorites","newFavorites","dispatch","weatherService","ActionsBar","autoCompleteOptions","handelSearch","value","props","filterLocationsByName","map","location","setState","this","getNewLocation","Autocomplete","freeSolo","root","options","onChange","e","renderInput","params","TextField","label","target","Switch","checked","toggleCToF","Component","currComponent","connect","CurrWeatherIcon","temperature","iconComponent","sunCloud","getIcon","open","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","HomePage","defaultCity","isHoverStar","isModalOpen","hasError","componentDidMount","isEmpty","setCurrWeatherByCity","toggleFavorites","history","checkIfCityExistInFavorites","getStarImgSrc","fullStar","emptyStar","converteFtoC","numberInF","toFixed","some","error","errorInfo","onMouseEnter","onMouseLeave","bottom","Grid","container","justify","day","key","item","Card","CardContent","component","moment","format","isError","cardsContainer","cityCard","useState","showCard","setShowCard","useEffect","CSSTransition","in","timeout","classNames","updatedFavorites","updatedWeather","Router","exact","path","render","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.b5fd9c29.chunk.js","sourcesContent":["const dummyFavorites = [\n  {\n    id: \"215854\",\n    name: \"Tel Aviv\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 26.6 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 79.88 },\n      },\n      WeatherText: \"Partly sunny\",\n    },\n  },\n  {\n    id: \"202396\",\n    name: \"Delhi\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 42.2 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 107.96 },\n      },\n      WeatherText: \"Sunny\",\n    },\n  },\n  {\n    id: \"226396\",\n    name: \"Tokyo\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 15.4 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 59.72 },\n      },\n      WeatherText: \"Cloudy\",\n    },\n  },\n  {\n    id: \"7894\",\n    name: \"Buenos Aires\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 16.1 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 60.98 },\n      },\n      WeatherText: \"Cloudy\",\n    },\n  },\n  {\n    id: \"235049\",\n    name: \"Cancún\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 27.9 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 82.22 },\n      },\n      WeatherText: \"Partly sunny\",\n    },\n  },\n  {\n    id: \"349727\",\n    name: \"New York\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 18.3 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 64.94 },\n      },\n      WeatherText: \"Partly sunny\",\n    },\n  },\n  {\n    id: \"307297\",\n    name: \"Barcelona\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 25.6 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 78.08 },\n      },\n      WeatherText: \"Sunny\",\n    },\n  },\n  {\n    id: \"213490\",\n    name: \"Rome\",\n    currWeather: {\n      Temperature: {\n        Metric: { Unit: \"C\", UnitType: 17, Value: 28.9 },\n        Imperial: { Unit: \"F\", UnitType: 18, Value: 84.02 },\n      },\n      WeatherText: \"Sunny\",\n    },\n  },\n];\n\nconst dummyLocations = [\n  {\n    Version: 1,\n    Key: \"28143\",\n    Type: \"City\",\n    Rank: 10,\n    LocalizedName: \"Dhaka\",\n    Country: { ID: \"BD\", LocalizedName: \"Bangladesh\" },\n    AdministrativeArea: { ID: \"C\", LocalizedName: \"Dhaka\" },\n  },\n  {\n    Version: 1,\n    Key: \"202396\",\n    Type: \"City\",\n    Rank: 10,\n    LocalizedName: \"Delhi\",\n    Country: { ID: \"IN\", LocalizedName: \"India\" },\n    AdministrativeArea: { ID: \"DL\", LocalizedName: \"Delhi\" },\n  },\n  {\n    Version: 1,\n    Key: \"58185\",\n    Type: \"City\",\n    Rank: 13,\n    LocalizedName: \"Dongguan\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"GD\", LocalizedName: \"Guangdong\" },\n  },\n  {\n    Version: 1,\n    Key: \"102133\",\n    Type: \"City\",\n    Rank: 13,\n    LocalizedName: \"Dalian\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"LN\", LocalizedName: \"Liaoning\" },\n  },\n  {\n    Version: 1,\n    Key: \"60971\",\n    Type: \"City\",\n    Rank: 13,\n    LocalizedName: \"Deyang\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"SC\", LocalizedName: \"Sichuan\" },\n  },\n  {\n    Version: 1,\n    Key: \"60631\",\n    Type: \"City\",\n    Rank: 13,\n    LocalizedName: \"Dezhou\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"SD\", LocalizedName: \"Shandong\" },\n  },\n  {\n    Version: 1,\n    Key: \"61417\",\n    Type: \"City\",\n    Rank: 13,\n    LocalizedName: \"Dali Prefecture\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"YN\", LocalizedName: \"Yunnan\" },\n  },\n  {\n    Version: 1,\n    Key: \"2333431\",\n    Type: \"City\",\n    Rank: 15,\n    LocalizedName: \"Dazhou\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"SC\", LocalizedName: \"Sichuan\" },\n  },\n  {\n    Version: 1,\n    Key: \"106771\",\n    Type: \"City\",\n    Rank: 15,\n    LocalizedName: \"Datong\",\n    Country: { ID: \"CN\", LocalizedName: \"China\" },\n    AdministrativeArea: { ID: \"SX\", LocalizedName: \"Shanxi\" },\n  },\n  {\n    Version: 1,\n    Key: \"297442\",\n    Type: \"City\",\n    Rank: 20,\n    LocalizedName: \"Dakar\",\n    Country: { ID: \"SN\", LocalizedName: \"Senegal\" },\n    AdministrativeArea: { ID: \"DK\", LocalizedName: \"Dakar\" },\n  },\n];\n\nconst dummyCurrLocation = [\n  {\n    Version: 1,\n    Key: \"215854\",\n    Type: \"City\",\n    Rank: 31,\n    LocalizedName: \"Tel Aviv\",\n    Country: {\n      ID: \"IL\",\n      LocalizedName: \"Israel\",\n    },\n    AdministrativeArea: {\n      ID: \"TA\",\n      LocalizedName: \"Tel Aviv\",\n    },\n  },\n];\n\nconst dummyCurrWeather = [\n  {\n    LocalObservationDateTime: \"2020-05-23T16:56:00+09:00\",\n    EpochTime: 1590220560,\n    WeatherText: \"Mostly cloudy\",\n    WeatherIcon: 6,\n    HasPrecipitation: false,\n    PrecipitationType: null,\n    IsDayTime: true,\n    Temperature: {\n      Metric: { Value: 21.1, Unit: \"C\", UnitType: 17 },\n      Imperial: { Value: 70, Unit: \"F\", UnitType: 18 },\n    },\n    MobileLink:\n      \"http://m.accuweather.com/en/jp/tokyo/226396/current-weather/226396?lang=en-us\",\n    Link:\n      \"http://www.accuweather.com/en/jp/tokyo/226396/current-weather/226396?lang=en-us\",\n  },\n  {\n    LocalObservationDateTime: \"2020-05-20T16:05:00+03:00\",\n    EpochTime: 1589979900,\n    WeatherText: \"Mostly sunny\",\n    WeatherIcon: 2,\n    HasPrecipitation: false,\n    PrecipitationType: null,\n    IsDayTime: true,\n    Temperature: {\n      Metric: {\n        Value: 41.1,\n        Unit: \"C\",\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 106,\n        Unit: \"F\",\n        UnitType: 18,\n      },\n    },\n    MobileLink:\n      \"http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\n    Link:\n      \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\n  },\n];\n\nconst dummyCurr5DaysForecast = {\n  Headline: {\n    EffectiveDate: \"2020-05-20T08:00:00+03:00\",\n    EffectiveEpochDate: 1589950800,\n    Severity: 3,\n    Text: \"The heat wave will continue through Thursday\",\n    Category: \"heat\",\n    EndDate: \"2020-05-21T20:00:00+03:00\",\n    EndEpochDate: 1590080400,\n    MobileLink:\n      \"http://m.accuweather.com/en/il/tel-aviv/215854/extended-weather-forecast/215854?lang=en-us\",\n    Link:\n      \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?lang=en-us\",\n  },\n  DailyForecasts: [\n    {\n      Date: \"2020-05-20T07:00:00+03:00\",\n      EpochDate: 1589947200,\n      Temperature: {\n        Minimum: {\n          Value: 73,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 106,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 30,\n        IconPhrase: \"Hot\",\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 37,\n        IconPhrase: \"Hazy moonlight\",\n        HasPrecipitation: false,\n      },\n      Sources: [\"AccuWeather\"],\n      MobileLink:\n        \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\n      Link:\n        \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\n    },\n    {\n      Date: \"2020-05-21T07:00:00+03:00\",\n      EpochDate: 1590033600,\n      Temperature: {\n        Minimum: {\n          Value: 71,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 94,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: \"Sunny\",\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: \"Clear\",\n        HasPrecipitation: false,\n      },\n      Sources: [\"AccuWeather\"],\n      MobileLink:\n        \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\",\n      Link:\n        \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\",\n    },\n    {\n      Date: \"2020-05-22T07:00:00+03:00\",\n      EpochDate: 1590120000,\n      Temperature: {\n        Minimum: {\n          Value: 69,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 85,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 2,\n        IconPhrase: \"Mostly sunny\",\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 38,\n        IconPhrase: \"Mostly cloudy\",\n        HasPrecipitation: false,\n      },\n      Sources: [\"AccuWeather\"],\n      MobileLink:\n        \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\",\n      Link:\n        \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\",\n    },\n    {\n      Date: \"2020-05-23T07:00:00+03:00\",\n      EpochDate: 1590206400,\n      Temperature: {\n        Minimum: {\n          Value: 67,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 78,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 2,\n        IconPhrase: \"Mostly sunny\",\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 36,\n        IconPhrase: \"Intermittent clouds\",\n        HasPrecipitation: false,\n      },\n      Sources: [\"AccuWeather\"],\n      MobileLink:\n        \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\",\n      Link:\n        \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\",\n    },\n    {\n      Date: \"2020-05-24T07:00:00+03:00\",\n      EpochDate: 1590292800,\n      Temperature: {\n        Minimum: {\n          Value: 64,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 76,\n          Unit: \"F\",\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 3,\n        IconPhrase: \"Partly sunny\",\n        HasPrecipitation: true,\n        PrecipitationType: \"Rain\",\n        PrecipitationIntensity: \"Light\",\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: \"Mostly clear\",\n        HasPrecipitation: true,\n        PrecipitationType: \"Rain\",\n        PrecipitationIntensity: \"Light\",\n      },\n      Sources: [\"AccuWeather\"],\n      MobileLink:\n        \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\",\n      Link:\n        \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\",\n    },\n  ],\n};\n\nexport default {\n  dummyFavorites,\n  dummyCurrLocation,\n  dummyLocations,\n  dummyCurrWeather,\n  dummyCurr5DaysForecast,\n};\n","import {\n  GET_LOCATIONS,\n  GET_LOCATION,\n  CURR_WEATHER,\n  FORECAST_5DAYS,\n  FAVORITES,\n  TEMP_TYPE,\n} from \"../actions/types\";\nimport dummyData from \"../services/dummyData\";\n\nconst initialState = {\n  locations: [],\n  currLocation: {},\n  currWeather: {},\n  curr5DaysForecast: [],\n  //restart the app with some exist favorites\n  favorites: dummyData.dummyFavorites,\n  isTempAsC: true,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload,\n      };\n    case GET_LOCATION:\n      return {\n        ...state,\n        currLocation: action.payload[0],\n      };\n    case CURR_WEATHER:\n      return {\n        ...state,\n        currWeather: action.payload[0],\n      };\n    case FORECAST_5DAYS:\n      return {\n        ...state,\n        curr5DaysForecast: action.payload.DailyForecasts,\n      };\n    case FAVORITES:\n      return {\n        ...state,\n        favorites: action.payload,\n      };\n    case TEMP_TYPE:\n      return {\n        ...state,\n        isTempAsC: !state.isTempAsC,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./weatherReducer\";\n\nexport default combineReducers({\n  weatherReducer,\n});\n","export const GET_LOCATIONS = \"GET_LOCATIONS\";\nexport const GET_LOCATION = \"GET_LOCATION\";\nexport const CURR_WEATHER = \"CURR_WEATHER\";\nexport const FORECAST_5DAYS = \"FORECAST_5DAYS\";\nexport const FAVORITES = \"FAVORITES\";\nexport const TEMP_TYPE = \"TEMP_TYPE\";\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport sun from \"../../icons/sun.svg\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n    textTransform: \"none\",\n    fontFamily: \"Balsamiq Sans\",\n    marginLeft: \"15px\",\n  },\n  titleIcon: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"15px\",\n  },\n  textStyle: {\n    fontFamily: \"Balsamiq Sans\",\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" style={{ background: cyan[700] }}>\n        <Toolbar>\n          <div className={classes.title}>\n            <Typography variant=\"h5\" className={classes.textStyle}>\n              Weather App\n            </Typography>\n            <img src={sun} className={classes.titleIcon} alt=\"header-icon\" />\n          </div>\n          <Typography variant=\"h6\">\n            <Link to=\"/\" className={classes.link}>\n              Home\n            </Link>\n          </Typography>\n          <Typography variant=\"h6\">\n            <Link to=\"/favorites\" className={classes.link}>\n              Favorites\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  theme: PropTypes.object,\n};\n\nexport default withStyles({}, { withTheme: true })(Header);\n","import cyan from \"@material-ui/core/colors/cyan\";\nimport background from \"../../icons/background.jpg\";\n\nexport const styles = (theme) => ({\n  actionsBarContainer: {\n    maxWidth: \"450px\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Balsamiq Sans\",\n  },\n  autocomplete: {\n    flex: 1,\n    marginRight: \"20px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  mainForecastContainer: {\n    padding: \"40px 30px 60px\",\n    border: `10px solid ${cyan[700]}`,\n    width: \"70%\",\n    margin: \"0 auto\",\n    borderRadius: \"10px 20px 30px 40px/30px\",\n    fontFamily: \"Balsamiq Sans\",\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n    background: `linear-gradient(rgba(255,255,255,0.7), rgba(255,255,255,0.5)), url(${background})`,\n  },\n  top: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  middle: {\n    fontSize: \"60px\",\n    margin: \"40px 0\",\n    textAlign: \"center\",\n  },\n  dayCard: {\n    textAlign: \"center\",\n    width: \"160px\",\n    height: \"200px\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  textStyle: {\n    fontFamily: \"Balsamiq Sans\",\n  },\n  current: {\n    textAlign: \"center\",\n  },\n  contentContainer: {\n    height: \"calc(100% - 40px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  favoritesSection: {\n    textAlign: \"center\",\n  },\n  favoritesStar: {\n    cursor: \"pointer\",\n  },\n});\n","import dummyData from \"./dummyData\";\n\nconst API_KEY = \"CA4pOBrUyGWeAykkbBDxTLED97tROrPn\";\n\nconst getLocations = async (query) => {\n  try {\n    const apiCall = await fetch(\n      `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\n    );\n    const res = await apiCall.json();\n    return res;\n  } catch (error) {\n    return dummyData.dummyLocations;\n  }\n};\n\nconst getCurrLocation = async (query) => {\n  try {\n    const apiCall = await fetch(\n      `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\n    );\n    const res = await apiCall.json();\n    return res;\n  } catch (error) {\n    return dummyData.dummyCurrLocation;\n  }\n};\n\nconst getCurrentWeather = async (locationKey) => {\n  try {\n    const apiCall = await fetch(\n      `https://dataservice.accuweather.com/currentconditions/v1/${locationKey}/?apikey=${API_KEY}`\n    );\n    const res = await apiCall.json();\n    return res;\n  } catch (error) {\n    return dummyData.dummyCurrWeather;\n  }\n};\n\nconst get5DaysForecast = async (locationKey) => {\n  try {\n    const apiCall = await fetch(\n      `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}`\n    );\n    const res = await apiCall.json();\n    return res;\n  } catch (error) {\n    return dummyData.dummyCurr5DaysForecast;\n  }\n};\n\nconst createFavorite = (currLocation, currWeather) => {\n  return {\n    id: currLocation.Key,\n    name: currLocation.LocalizedName,\n    currWeather,\n  };\n};\n\nconst setFavorites = (newFavorites) => {\n  return newFavorites;\n};\n\nconst addToFavorites = (newFavorite, favorites) => {\n  favorites.push(newFavorite);\n  return favorites;\n};\n\nconst removeFromFavorites = (newFavorite, favorites) => {\n  const cityIdx = favorites.findIndex((city) => city.id === newFavorite.id);\n  favorites.splice(cityIdx, 1);\n  return favorites;\n};\n\nexport default {\n  getLocations,\n  getCurrLocation,\n  getCurrentWeather,\n  get5DaysForecast,\n  createFavorite,\n  addToFavorites,\n  removeFromFavorites,\n  setFavorites,\n};\n","import {\n  GET_LOCATIONS,\n  GET_LOCATION,\n  CURR_WEATHER,\n  FORECAST_5DAYS,\n  FAVORITES,\n  TEMP_TYPE,\n} from \"./types\";\nimport weatherService from \"../services/weatherService\";\n\nexport const getLocations = (query) => async (dispatch) => {\n  const res = await weatherService.getLocations(query);\n  dispatch({ type: GET_LOCATIONS, payload: res });\n};\n\nexport const getCurrLocation = (query) => async (dispatch) => {\n  const res = await weatherService.getCurrLocation(query);\n  dispatch({ type: GET_LOCATION, payload: res });\n};\n\nexport const getCurrentWeather = (locationKey) => async (dispatch) => {\n  const res = await weatherService.getCurrentWeather(locationKey);\n  dispatch({ type: CURR_WEATHER, payload: res });\n};\n\nexport const get5DaysForecast = (locationKey) => async (dispatch) => {\n  const res = await weatherService.get5DaysForecast(locationKey);\n  dispatch({ type: FORECAST_5DAYS, payload: res });\n};\n\nexport const addToFavorites = (newFavorite, favorites) => async (dispatch) => {\n  const res = await weatherService.addToFavorites(newFavorite, favorites);\n  dispatch({ type: FAVORITES, payload: res });\n};\n\nexport const removeFromFavorites = (newFavorite, favorites) => async (\n  dispatch\n) => {\n  const res = await weatherService.removeFromFavorites(newFavorite, favorites);\n  dispatch({ type: FAVORITES, payload: res });\n};\n\nexport const setFavorites = (newFavorites) => async (dispatch) => {\n  const res = await weatherService.setFavorites(newFavorites);\n  dispatch({ type: FAVORITES, payload: res });\n};\n\nexport const toggleCToF = () => async (dispatch) => {\n  dispatch({ type: TEMP_TYPE });\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./HomePage.style\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { connect } from \"react-redux\";\nimport { getLocations, toggleCToF } from \"../../actions/weatherActions\";\n\nclass ActionsBar extends Component {\n  state = {\n    autoCompleteOptions: [],\n  };\n\n  handelSearch = async (value) => {\n    // when searching value, fetch all cities from api to set the dropdown\n    if (value) await this.props.getLocations(value);\n    else await this.props.getLocations(this.props.currLocation.LocalizedName);\n    const filterLocationsByName = this.props.locations?.map(\n      (location) => location.LocalizedName\n    );\n    this.setState({ autoCompleteOptions: filterLocationsByName });\n  };\n\n  render() {\n    const { classes, getNewLocation, isTempAsC } = this.props;\n    return (\n      <div className={classes.actionsBarContainer}>\n        <Autocomplete\n          freeSolo\n          classes={{ root: classes.autocomplete }}\n          options={this.state.autoCompleteOptions}\n          onChange={(e, value) => getNewLocation(value)}\n          renderInput={(params) => {\n            return (\n              <TextField\n                {...params}\n                label=\"Search\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={(e) => this.handelSearch(e.target.value)}\n              />\n            );\n          }}\n        />\n        <div>\n          <div>{`Change To ${isTempAsC ? \"F\" : \"C\"}`}</div>\n          <Switch\n            checked={isTempAsC}\n            onChange={() => this.props.toggleCToF()}\n            name=\"checkedA\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nActionsBar.propTypes = {\n  classes: PropTypes.object,\n};\n\nconst mapStateToPtops = (state) => ({\n  locations: state.weatherReducer.locations,\n  currLocation: state.weatherReducer.currLocation,\n  isTempAsC: state.weatherReducer.isTempAsC,\n});\n\nconst currComponent = withStyles(styles, { withTheme: true })(ActionsBar);\n\nexport default connect(mapStateToPtops, {\n  getLocations,\n  toggleCToF,\n})(currComponent);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CloudOutlinedIcon from \"@material-ui/icons/CloudOutlined\";\nimport sunCloud from \"../icons/sun-cloud.svg\";\nimport WbSunnyOutlinedIcon from \"@material-ui/icons/WbSunnyOutlined\";\n\nconst CurrWeatherIcon = ({ temperature }) => {\n  const getIcon = () => {\n    let iconComponent;\n    if (temperature < 15) iconComponent = <CloudOutlinedIcon />;\n    else if (temperature > 15 && temperature < 20)\n      iconComponent = (\n        <img src={sunCloud} width=\"25px\" height=\"25px\" alt=\"sun-cloud\" />\n      );\n    else if (temperature > 20) iconComponent = <WbSunnyOutlinedIcon />;\n    return iconComponent;\n  };\n  return <>{getIcon()}</>;\n};\n\nCurrWeatherIcon.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default CurrWeatherIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst styles = () => ({});\n\nconst ErrorModal = ({ classes, open, handleClose }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Something went wrong</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          There is an error\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nErrorModal.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default withStyles(styles, { withTheme: true })(ErrorModal);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./HomePage.style\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport {\n  getCurrLocation,\n  getCurrentWeather,\n  get5DaysForecast,\n  addToFavorites,\n  removeFromFavorites,\n} from \"../../actions/weatherActions\";\nimport ActionsBar from \"./ActionsBar\";\nimport weatherService from \"../../services/weatherService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CurrWeatherIcon from \"../CurrWeatherIcon\";\nimport emptyStar from \"../../icons/empty.png\";\nimport fullStar from \"../../icons/full.png\";\nimport ErrorModal from \"../ErrorModal\";\n\nclass HomePage extends Component {\n  state = {\n    defaultCity: \"Tel aviv\",\n    isHoverStar: false,\n    isModalOpen: false,\n    hasError: false,\n  };\n\n  componentDidMount = async () => {\n    // fetch what's needed from api's, and set in the store in order to use in the app\n    if (isEmpty(this.props.currLocation)) {\n      this.setCurrWeatherByCity(this.state.defaultCity);\n    } else this.setCurrWeatherByCity(this.props.currLocation.LocalizedName);\n\n    if (this.state.hasError) this.setState({ isModalOpen: true });\n  };\n\n  componentDidCatch(error, errorInfo) {\n    // caching any js error\n    this.setState({\n      hasError: true,\n    });\n  }\n\n  setCurrWeatherByCity = async (city) => {\n    await this.props.getCurrLocation(\n      city || this.props.currLocation.LocalizedName\n    );\n    await this.props.getCurrentWeather(this.props.currLocation?.Key);\n    await this.props.get5DaysForecast(this.props.currLocation?.Key);\n  };\n\n  toggleFavorites = () => {\n    // when clicking on favorites star, call an action to add it to the pavorites array in atore\n    // toggle it if exist, cut it from the array and save to the store\n    const {\n      currLocation,\n      currWeather,\n      addToFavorites,\n      favorites,\n      removeFromFavorites,\n    } = this.props;\n    this.props.history.push(\"/favorites\");\n    const newFavorite = weatherService.createFavorite(\n      currLocation,\n      currWeather\n    );\n    const isAlreadyExist = this.checkIfCityExistInFavorites();\n    isAlreadyExist\n      ? removeFromFavorites(newFavorite, favorites)\n      : addToFavorites(newFavorite, favorites);\n  };\n\n  getStarImgSrc = () => {\n    let src;\n    if (this.checkIfCityExistInFavorites()) src = fullStar;\n    else {\n      src = this.state.isHoverStar ? fullStar : emptyStar;\n    }\n    return src;\n  };\n\n  converteFtoC = (numberInF) => {\n    return ((numberInF - 32) * (5 / 9)).toFixed(0);\n  };\n\n  checkIfCityExistInFavorites = () => {\n    return this.props.favorites.some(\n      (city) => this.props.currLocation.Key === city.id\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      currLocation,\n      currWeather,\n      curr5DaysForecast,\n      isTempAsC,\n    } = this.props;\n    return (\n      <div>\n        <ActionsBar getNewLocation={this.setCurrWeatherByCity} />\n\n        <div className={classes.mainForecastContainer}>\n          <div className={classes.top}>\n            <div className={classes.current}>\n              <Typography className={classes.textStyle} variant=\"h5\">\n                {currLocation.LocalizedName}\n              </Typography>\n              <CurrWeatherIcon\n                temperature={currWeather.Temperature?.Metric.Value}\n              />\n              {isTempAsC ? (\n                <Typography className={classes.textStyle} variant=\"h5\">\n                  {currWeather.Temperature?.Metric.Value}&deg;\n                  {currWeather.Temperature?.Metric.Unit}\n                </Typography>\n              ) : (\n                <Typography className={classes.textStyle} variant=\"h5\">\n                  {currWeather.Temperature?.Imperial.Value}&deg;\n                  {currWeather.Temperature?.Imperial.Unit}\n                </Typography>\n              )}\n            </div>\n            <div className={classes.favoritesSection}>\n              <Typography className={classes.textStyle} variant=\"h5\">\n                Add to favorites\n              </Typography>\n              <img\n                className={classes.favoritesStar}\n                onClick={() => this.toggleFavorites()}\n                src={this.getStarImgSrc()}\n                alt=\"favorites-star\"\n                width=\"50px\"\n                height=\"50px\"\n                onMouseEnter={() =>\n                  this.setState({\n                    isHoverStar: true,\n                  })\n                }\n                onMouseLeave={() =>\n                  this.setState({\n                    isHoverStar: false,\n                  })\n                }\n              />\n            </div>\n          </div>\n          <div className={classes.middle}>{currWeather?.WeatherText}</div>\n          <div className={classes.bottom}>\n            <Grid container justify=\"center\" spacing={4}>\n              {curr5DaysForecast &&\n                curr5DaysForecast.map((day) => (\n                  <Grid key={day.EpochDate} item>\n                    <Card className={classes.dayCard}>\n                      <CardContent className={classes.contentContainer}>\n                        <Typography variant=\"h5\" component=\"h2\">\n                          {moment(day.Date).format(\"dddd\")}\n                        </Typography>\n                        <CurrWeatherIcon\n                          temperature={this.converteFtoC(\n                            day.Temperature.Minimum.Value\n                          )}\n                        />\n                        {isTempAsC ? (\n                          <Typography variant=\"h6\">\n                            {this.converteFtoC(day.Temperature.Minimum.Value)}-\n                            {this.converteFtoC(day.Temperature.Maximum.Value)}\n                            &deg;C\n                          </Typography>\n                        ) : (\n                          <Typography variant=\"h6\">\n                            {day.Temperature.Minimum.Value}-\n                            {day.Temperature.Maximum.Value}\n                            &deg;F\n                          </Typography>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n            </Grid>\n          </div>\n        </div>\n        <ErrorModal\n          open={this.state.isModalOpen}\n          handleClose={() => this.setState({ isModalOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  classes: PropTypes.object,\n};\n\nconst mapStateToPtops = (state) => ({\n  locations: state.weatherReducer.locations,\n  currWeather: state.weatherReducer.currWeather,\n  currLocation: state.weatherReducer.currLocation,\n  curr5DaysForecast: state.weatherReducer.curr5DaysForecast,\n  favorites: state.weatherReducer.favorites,\n  isTempAsC: state.weatherReducer.isTempAsC,\n  isError: state.weatherReducer.isError,\n});\n\nconst currComponent = withStyles(styles, { withTheme: true })(HomePage);\n\nexport default connect(mapStateToPtops, {\n  getCurrLocation,\n  getCurrentWeather,\n  get5DaysForecast,\n  addToFavorites,\n  removeFromFavorites,\n})(currComponent);\n","import background from \"../../icons/background.jpg\";\n\nexport const styles = () => ({\n  cardsContainer: {\n    margin: \"50px\",\n  },\n  cityCard: {\n    textAlign: \"center\",\n    width: \"200px\",\n    height: \"230px\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    borderRadius: \"5px 10px 15px 30px/30px 15px 10px 5px\",\n    background: `linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.6)), url(${background})`,\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n  },\n  contentContainer: {\n    height: \"calc(100% - 40px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./Favorites.style\";\nimport { connect } from \"react-redux\";\nimport { getCurrentWeather, setFavorites } from \"../../actions/weatherActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CurrWeatherIcon from \"../CurrWeatherIcon\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./animation.css\";\n\nconst FavoriteItem = ({ classes, isTempAsC, city }) => {\n  const [showCard, setShowCard] = useState(false);\n\n  useEffect(() => {\n    setShowCard(true);\n  });\n\n  return (\n    <CSSTransition key={city.id} in={showCard} timeout={300} classNames=\"card\">\n      <Grid key={city.id} item>\n        <Card className={classes.cityCard}>\n          <CardContent className={classes.contentContainer}>\n            <Typography variant=\"h5\">{city.name}</Typography>\n            <CurrWeatherIcon\n              temperature={city.currWeather.Temperature?.Metric?.Value}\n            />\n            {isTempAsC ? (\n              <Typography variant=\"h6\">\n                {city.currWeather.Temperature?.Metric?.Value}\n                &deg;\n                {city.currWeather.Temperature?.Metric?.Unit}\n              </Typography>\n            ) : (\n              <Typography variant=\"h6\">\n                {city.currWeather.Temperature?.Imperial?.Value}\n                &deg;\n                {city.currWeather.Temperature?.Imperial?.Unit}\n              </Typography>\n            )}\n            <Typography variant=\"h5\">{city.currWeather.WeatherText}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </CSSTransition>\n  );\n};\n\nFavoriteItem.propTypes = {\n  classes: PropTypes.object,\n};\n\nconst mapStateToPtops = (state) => ({\n  isTempAsC: state.weatherReducer.isTempAsC,\n});\n\nconst currComponent = withStyles(styles)(FavoriteItem);\n\nexport default connect(mapStateToPtops, { getCurrentWeather, setFavorites })(\n  currComponent\n);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./Favorites.style\";\nimport { connect } from \"react-redux\";\nimport { getCurrentWeather, setFavorites } from \"../../actions/weatherActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport weatherService from \"../../services/weatherService\";\nimport FavoriteItem from \"./FavoriteItem\";\n\nconst Favorites = ({ classes, favorites }) => {\n  useEffect(() => {\n    // update in live the current weather from api for each location\n    const updatedFavorites = favorites.map(async (city) => {\n      const updatedWeather = await weatherService.getCurrentWeather(city.id);\n      city.currWeather = updatedWeather[0];\n    });\n\n    setFavorites(updatedFavorites);\n  });\n\n  return (\n    <div className={classes.cardsContainer}>\n      <Grid container spacing={2}>\n        {favorites.map((city) => (\n          <FavoriteItem key={city.id} city={city} />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nFavorites.propTypes = {\n  classes: PropTypes.object,\n  favorites: PropTypes.array,\n};\n\nconst mapStateToPtops = (state) => ({\n  favorites: state.weatherReducer.favorites,\n});\n\nconst currComponent = withStyles(styles)(Favorites);\n\nexport default connect(mapStateToPtops, { getCurrentWeather, setFavorites })(\n  currComponent\n);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../HomePage/HomePage\";\nimport Favorites from \"../Favorites/Favorites\";\n\nconst Router = ({ ...props }) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={(props) => <HomePage {...props} />} />\n      <Route\n        exact\n        path=\"/favorites\"\n        render={(props) => <Favorites {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Header from \"./components/Header/Header\";\nimport Router from \"./components/Router/Router\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <HashRouter>\n          <Header />\n          <Router />\n        </HashRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.e12982f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/full.7dd045a8.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.1259b6d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun-cloud.8c2ec307.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.d1a3fce6.png\";"],"sourceRoot":""}